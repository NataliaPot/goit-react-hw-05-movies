{"version":3,"file":"static/js/840.b5989627.chunk.js","mappings":"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","sources":["Servises/Api.js","components/Search/Search.styled.js","components/Search/Search.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '5c6855009dd58021f283b6505813d1c2';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const movieDetails = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const movieCredits = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const movieReviews = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  margin-top: 12px;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  margin-bottom: 28px;\n  border: 1px solid black;\n  outline: 3px solid white;\n  background-color: #fff;\n  &:focus {\n    border-radius: 3px;\n    border: 1px solid rgb(0, 158, 186);\n    outline: 2px solid rgb(0, 158, 186, 0.3);\n    box-shadow: 0px 0 5px 3px rgba(0, 158, 186, 0.3);\n    background-color: #fff;\n  }\n\n  &:hover {\n    border-radius: 3px;\n    border: 1px solid rgb(0, 158, 186);\n    outline: 2px solid rgb(0, 158, 186, 0.3);\n    box-shadow: 0px 0 5px 3px rgba(0, 158, 186, 0.3);\n    background-color: #fff;\n  }\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:active {\n    transition: background-color 1000000s ease-in-out 0s;\n  }\n`;\n","import React, { useState } from 'react';\nimport { Input, SearchForm } from './Search.styled';\n\nconst Search = ({ searchQuery }) => {\n  const [search, setSearch] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    searchQuery(search);\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"search\"\n        value={search}\n        required\n        onChange={e => setSearch(e.target.value)}\n      />\n      <button type=\"submit\">Search</button>\n    </SearchForm>\n  );\n};\n\nexport default Search;\n","import { searchMovie } from 'Servises/Api';\nimport Search from 'components/Search/Search';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movie = searchParams.get('movie') ?? '';\n  const getFilm = query => {\n    query ? setSearchParams({ movie: query }) : setSearchParams({});\n  };\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        const data = await searchMovie(movie);\n        setMovies(data);\n        if (data === 0) {\n          return;\n        }\n      } catch (error) {\n        console.error(error.message);\n      }\n    }\n\n    getMovies();\n  }, [movie]);\n\n  return (\n    <>\n      <Search searchQuery={getFilm} />\n\n      <ul>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link state={{ from: location }} to={`/movies/${id.toString()}`}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","results","stop","apply","arguments","searchMovie","_ref2","_callee2","query","_context2","_x","movieDetails","_ref3","_callee3","movie_id","_context3","_x2","movieCredits","_ref4","_callee4","_context4","cast","_x3","movieReviews","_ref5","_callee5","_context5","_x4","SearchForm","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","searchQuery","_useState","useState","_useState2","_slicedToArray","search","setSearch","_jsxs","onSubmit","e","preventDefault","children","_jsx","type","name","value","required","onChange","target","_searchParams$get","movies","setMovies","location","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movie","get","useEffect","_getMovies","t0","console","error","message","getMovies","_Fragment","Search","map","id","title","Link","state","from","to","toString"],"sourceRoot":""}